<?xml version="1.0" encoding="UTF-8"?>
<!--루트태그가 beans  -->
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns="http://www.springframework.org/schema/beans" 
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   <!-- Enables the Spring MVC @Controller programming model -->
   <mvc:annotation-driven />
   <!--mvc:annotation-driven은 서블릿을 만들어주는것 요청값을 매핑시킬수 있다     -->
   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <mvc:resources mapping="/resources/**" location="/resources/" />
	
   <!--multipart /form데이터 설정--> 
   <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"></bean>
   
   <!--모든 요청을 가로챈다. /resources/로 요청한 자료는 서블릿이 가로채지 않는다!  -->
   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/WEB-INF/views/" /> <!--property태그  -->
      <property name="suffix" value=".jsp" />
   </bean>
   <context:component-scan base-package="cafe.jjdev.web" />
   <!--커넥션풀 생성  -->
   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/springdb?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="java0000"/>
    </bean>
      <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybatis 세션생성시 사용할 dataSource주입 -->
        <property name="dataSource" ref="dataSource" />
        <!-- mybatis 세션생성후 쿼리를 실행시킬때 사용할 쿼리위치(메퍼)설정 -->
        <property name="mapperLocations">
            <list>
                <value>classpath:cafe/jjdev/web/service/MemberMapper.xml</value>
                <value>classpath:cafe/jjdev/web/service/BoardMapper.xml</value>
            </list>
        </property>
    </bean>
    <!-- mybatis를 사용하여 db에접속하여 쿼리를 보내는 주체인 SqlSessionTemplate빈 생성-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
</beans>
<!-- id="sqlSessionTemplate" : new 생성자연산자를 대신한다. -->

<!--bean의 역할 : InternalResourceViewResolver 이 객체를 미리 만들어 두겠다가  
리턴값 앞에/WEB-INF/views/라고 붙여 준다.뒤에는 .jsp라고 붙여서 찾을거다.
bean = 레파지토리(repagetory)와 같은 역할을 한다.
 bean의 역할이 jsp객체를 만들어주는 역할
 context는 패키지의 내용을 찾아서 bean으로 바꿔주는것
-->